{"version":3,"sources":["components/newTodoForm/NewTodoForm.js","components/todo/Todo.js","components/todoList/TodoList.js","components/app/App.js","serviceWorker.js","index.js"],"names":["NewTodoForm","props","state","todo","completed","handleChange","bind","handleSubmit","evt","this","setState","target","name","value","preventDefault","addTodo","id","uuid","onSubmit","className","htmlFor","onChange","placeholder","Component","Todo","editing","handleRemove","handleEdit","handleSave","keyPressed","handleBlur","handleComplete","removeTodo","prev","editTodo","index","key","onKeyPress","onBlur","onClick","TodoList","todos","markComplete","prevProps","prevState","localStorage","setItem","JSON","stringify","getItem","parse","newTodo","filter","todoList","map","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bb980114.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport uuid from 'uuid/v4'\nimport './NewTodoForm.css'\n\nclass NewTodoForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\ttodo: \"\",\n\t\t\tcompleted:false\n\t\t}\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t\tthis.handleSubmit = this.handleSubmit.bind(this)\n\t}\n\n\thandleChange(evt) {\n\t\tthis.setState({[evt.target.name]: evt.target.value})\n\t}\n\n\thandleSubmit(evt) {\n\t\tevt.preventDefault()\n\t\tthis.props.addTodo({...this.state, id: uuid()})\n\t\tthis.setState({todo:\"\"})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit} className=\"todoForm\">\n\t\t\t\t<label className=\"todoForm-label\"htmlFor=\"todo\">New Todo\n\t\t\t\t</label>\n\t\t\t\t<div className=\"todoForm-items\">\n\t\t\t\t\t<input\n\t\t\t\t\tid=\"todo\"\n\t\t\t\t\tclassName=\"todoForm-input\"\n\t\t\t\t\tname=\"todo\"\n\t\t\t\t\tvalue={this.state.todo}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tplaceholder=\"Ex. Do Laundry\">\n\t\t\t\t\t</input>\n\t\t\t\t\t<button className=\"todoForm-button\">Add </button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nexport default NewTodoForm;","import React, {Component} from 'react'\nimport './Todo.css'\n\nclass Todo extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tediting: false,\n\t\t\tid:\"\",\n\t\t\ttodo: this.props.todo\n\n\t\t}\n\t\tthis.handleRemove = this.handleRemove.bind(this)\n\t\tthis.handleEdit = this.handleEdit.bind(this)\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t\tthis.handleSave= this.handleSave.bind(this)\n\t\tthis.keyPressed= this.keyPressed.bind(this)\n\t\tthis.handleBlur= this.handleBlur.bind(this)\n\t\tthis.handleComplete = this.handleComplete.bind(this)\n\t}\n\n\thandleRemove(evt) {\n\t\tthis.props.removeTodo(evt.target.id)\n\t}\n\n\thandleEdit(evt) {\n\t\tconst id = evt.target.id\n\t\tthis.setState((prev) => {\n\t\t\treturn {\n\t\t\t\tediting: !prev.editing,\n\t\t\t\tid:id\t\t\t\n\t\t\t}\n\t\t})\n\t}\n\n\thandleChange(evt) {\n\t\tthis.setState({todo: evt.target.value})\n\t}\n\n\thandleSave(evt) {\n\t\tthis.props.editTodo({todo:this.state.todo ,index:this.props.index})\n\t\tthis.setState({editing: false,\n\t\t\tid:\"\"})\n\t}\n\n\tkeyPressed(evt) {\n\t  if (evt.key === \"Enter\") {\n\t    this.handleSave(evt)\n\t  }\n\t}\n\n\thandleBlur(evt) {\n\t\t this.handleSave(evt)\n\t}\n\n\thandleComplete(evt) {\n\t\t this.props.handleComplete(this.props.index)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"divider\">\n\t\t\t{this.state.editing && this.state.id === this.props.id ?\n\t\t\t\t<form className=\"todoForm-items\">\n\t\t\t\t\t<input \n\t\t\t\t\tclassName=\"todo-edit-input\"\n\t\t\t\t\tvalue={this.state.todo}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tonKeyPress={this.keyPressed}\n\t\t\t\t\tonBlur={this.handleBlur}/>\n\t\t\t\t\t<button className=\"todo-edit-button\"  onClick={this.handleSave}>Save</button>\n\t\t\t\t</form>\n\t\t\t\t :\n\t\t\t\t<div className=\"todo-item\">\n\t\t\t\t\t<p onClick={this.handleComplete} className={this.props.completed ?\"todo-item-text todo-item-completed\":\"todo-item-text\"}>{this.props.todo}</p>\n\t\t\t\t\t<div className=\"todo-item-buttons\">\n\t\t\t\t\t\t<i className=\"fas fa-pen todo-item-edit\" id={this.props.id} onClick={this.handleEdit}></i>\n\t\t\t\t\t\t<i className=\"fas fa-trash todo-item-delete\" id={this.props.id} onClick={this.handleRemove}></i>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\t\t\t\t\n\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Todo;","import React, {Component} from 'react'\nimport NewTodoForm from '../newTodoForm/NewTodoForm'\nimport Todo from '../todo/Todo'\nimport './TodoList.css'\n\nclass TodoList extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\ttodos: []\n\t\t}\n\n\t\tthis.addTodo = this.addTodo.bind(this)\n\t\tthis.removeTodo = this.removeTodo.bind(this)\n\t\tthis.editTodo = this.editTodo.bind(this)\n\t\tthis.markComplete = this.markComplete.bind(this)\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState){\n\t\tif (prevState !== this.state) {\n\t\t\tlocalStorage.setItem('todoList', JSON.stringify(this.state.todos))\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tlet todos = localStorage.getItem('todoList')\n\t\tthis.setState({todos: JSON.parse(todos)})\n\t}\n\n\taddTodo(todo) {\n\t\tconst newTodo = [...this.state.todos, todo]\n\t\tthis.setState({todos: newTodo})\n\t}\n\n\tremoveTodo(id) {\n\t\tconst newTodo = this.state.todos.filter(todo => todo.id !== id)\n\t\tthis.setState({todos: newTodo})\n\t}\n\n\teditTodo({todo,index}) {\n\t\tconst newTodo = [...this.state.todos]\n\t\tnewTodo[index] = {...newTodo[index], todo}\n\t\tthis.setState({todos: newTodo})\n\t}\n\n\tmarkComplete(index) {\n\t\tconst newTodo = [...this.state.todos]\n\t\tnewTodo[index] = {...newTodo[index], completed: !this.state.todos[index].completed}\n\t   \tthis.setState({todos: newTodo})\n\t}\n\n\trender() {\n\t\tconst todoList = this.state.todos.map((todo,index) => \n\t\t\t<Todo key={todo.id} \n\t\t\t\tid={todo.id}\n\t\t\t\tindex={index}\n\t\t\t\tcompleted={todo.completed}\n\t\t\t\ttodo={todo.todo} \n\t\t\t\tremoveTodo={this.removeTodo}\n\t\t\t\teditTodo={this.editTodo}\n\t\t\t\thandleComplete={this.markComplete}/>\n\t\t\t\n\t\t)\n\t\treturn (\n\t\t\t<div className=\"todoApp\">\n\t\t\t\t<h1 className=\"todoApp-title\">Todo App!</h1>\n\t\t\t\t<NewTodoForm addTodo={this.addTodo}/>\n\t\t\t\t<div className=\"todoApp-list\">{todoList}</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport TodoList from '../todoList/TodoList'\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}